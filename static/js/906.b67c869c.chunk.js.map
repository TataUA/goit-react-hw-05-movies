{"version":3,"file":"static/js/906.b67c869c.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 10px;\n  padding: 4px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 400;\n  font-size: 14px;\n  border: 1px solid black;\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport PropTypes from 'prop-types';\nimport { Button } from 'components/BackLink/BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <Button to={to}>\n      <HiArrowLeft size=\"14\" />\n      {children}\n    </Button>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object,\n  children: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  display: flex;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n`;\n\nexport const Poster = styled.img`\n  margin-right: 20px;\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Section, Poster } from 'components/MovieItem/MovieItem.styled';\n\nexport const MovieItem = ({ filmDetails }) => {\n  const {\n    original_title,\n    release_date,\n    overview,\n    genres,\n    poster_path,\n    vote_average,\n  } = filmDetails;\n  const releaseYear = release_date.split('-')[0];\n  const genresList = genres?.map(genre => genre.name).join(', ');\n  const popularity = Math.round(vote_average * 10);\n\n  return (\n    <Section>\n      <Poster\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n        alt={original_title}\n        width=\"200\"\n      />\n      <div>\n        <h2>\n          {original_title} ({releaseYear})\n        </h2>\n        <p>{popularity} %</p>\n        <h3>Overview </h3>\n        <p>{overview}</p>\n        <h3>Genres </h3>\n        <p>{genresList}</p>\n      </div>\n    </Section>\n  );\n};\n\nMovieItem.propTypes = {\n  filmDetails: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.ul`\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n`;\n\nexport const Details = styled(Link)`\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { getFullInfo } from 'services/API';\nimport { Section, Details } from 'components/MovieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const [filmDetails, setFilmDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    async function filmInfo() {\n      try {\n        setLoading(true);\n        const response = await getFullInfo(movieId);\n        setFilmDetails(response);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    filmInfo();\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      {loading && <Loader />}\n      {filmDetails && <MovieItem filmDetails={filmDetails} />}\n      {error && <div>Something went wrong... &#128576;</div>}\n      <p>Additional information</p>\n      <Section>\n        <li>\n          <Details to=\"cast\">cast</Details>\n        </li>\n        <li>\n          <Details to=\"reviews\">review</Details>\n        </li>\n      </Section>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'b2a327199ab710c06f4180e085359e4a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data;\n};\n\nexport const findFilmByName = async value => {\n  const params = {\n    query: value,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n};\n\nexport const getFullInfo = async idFilm => {\n  const { data } = await axios.get(`/movie/${idFilm}`);\n  return data;\n};\n\nexport const getActorsInfo = async idFilm => {\n  const { data } = await axios.get(`movie/${idFilm}/credits`);\n  return data;\n};\n\nexport const getFilmReviews = async idFilm => {\n  const { data } = await axios.get(`/movie/${idFilm}/reviews`);\n  return data;\n};\n"],"names":["Button","styled","Link","BackLink","to","children","size","Section","Poster","MovieItem","filmDetails","original_title","release_date","overview","genres","poster_path","vote_average","releaseYear","split","genresList","map","genre","name","join","popularity","Math","round","src","alt","width","Details","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useState","setFilmDetails","loading","setLoading","error","setError","useEffect","getFullInfo","response","filmInfo","current","Loader","axios","api_key","language","getTrendingFilms","data","findFilmByName","value","params","query","idFilm","getActorsInfo","getFilmReviews"],"sourceRoot":""}