{"version":3,"file":"static/js/244.befb68fd.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled(Link)`\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item } from 'components/MoviesList/MovieList.styled';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(({ id, original_title }) => (\n        <li key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <p>{original_title}</p>\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  padding: 4px;\n  min-width: 400px;\n  font-size: 16px;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  border-radius: 4px;\n  font-size: 16px;\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Input, Button } from 'components/SearchForm/SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.target.elements.search.value.trim();\n    onSubmit(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        name=\"search\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { findFilmByName } from 'services/API';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const [filmsByName, setFilmsByName] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    async function findFilms() {\n      try {\n        setLoading(true);\n        const response = await findFilmByName(movieName);\n        const films = response.results.map(({ id, original_title }) => ({\n          id,\n          original_title,\n        }));\n        setFilmsByName(films);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    findFilms();\n  }, [movieName]);\n\n  const handleChange = value => {\n    if (value === '') {\n      alert('You need write something...');\n      return;\n    }\n    setSearchParams({\n      query: value.toLowerCase(),\n    });\n    setFilmsByName([]);\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={handleChange} />\n      {loading && <Loader />}\n      {filmsByName.length === 0 && movieName ? (\n        <div>Sorry, but nothing was found for your request &#x2639;</div>\n      ) : (\n        <MoviesList films={filmsByName} />\n      )}\n      {error && <div>Something went wrong... &#128576;</div>}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'b2a327199ab710c06f4180e085359e4a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data;\n};\n\nexport const findFilmByName = async value => {\n  const params = {\n    query: value,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n};\n\nexport const getFullInfo = async idFilm => {\n  const { data } = await axios.get(`/movie/${idFilm}`);\n  return data;\n};\n\nexport const getActorsInfo = async idFilm => {\n  const { data } = await axios.get(`movie/${idFilm}/credits`);\n  return data;\n};\n\nexport const getFilmReviews = async idFilm => {\n  const { data } = await axios.get(`/movie/${idFilm}/reviews`);\n  return data;\n};\n"],"names":["Item","styled","Link","MoviesList","films","location","useLocation","map","id","original_title","to","state","from","Input","Button","SearchForm","onSubmit","e","preventDefault","value","target","elements","search","trim","name","type","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","movieName","get","useState","filmsByName","setFilmsByName","loading","setLoading","error","setError","useEffect","findFilmByName","response","results","findFilms","query","toLowerCase","alert","Loader","length","axios","api_key","language","getTrendingFilms","data","params","getFullInfo","idFilm","getActorsInfo","getFilmReviews"],"sourceRoot":""}