{"version":3,"file":"static/js/415.b6469fa3.chunk.js","mappings":"oNAGaA,GAAOC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iE,SCCJE,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,yBACE,SAACT,EAAD,CAAMU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,UACE,uBAAII,OAFCD,EADA,KAShB,C,0HCwBD,UArCa,WACX,OAAgCK,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIH,GAAW,GAFf,UAG2BI,EAAAA,EAAAA,MAH3B,OAGUC,EAHV,OAIUlB,EAAQkB,EAASC,QAAQhB,KAC7B,kBAA0C,CACxCiB,YADF,EAAGA,YAEDhB,GAFF,EAAgBA,GAGdC,eAHF,EAAoBA,eAApB,IAMFM,EAAYX,GAXhB,gDAaIe,EAAS,EAAD,IAbZ,yBAeIF,GAAW,GAff,6EADc,uBAAC,WAAD,wBAmBdQ,EACD,GAAE,KAGD,6BACE,wBAAI,mBACHT,IAAW,SAAC,IAAD,KACZ,SAAC,IAAD,CAAYZ,MAAOU,IAClBI,IAAS,yBAAK,2CAGpB,C,mMCpCDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,MAGL,IAAMP,EAAgB,mCAAG,sGACPK,EAAAA,EAAAA,IAAU,uBADH,uBACtBG,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAc,mCAAG,WAAMC,GAAN,kFACtBC,EAAS,CACbC,MAAOF,GAFmB,SAILL,EAAAA,EAAAA,IAAU,gBAAiB,CAAEM,OAAAA,IAJxB,uBAIpBH,EAJoB,EAIpBA,KAJoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAW,mCAAG,WAAMC,GAAN,yFACFT,EAAAA,EAAAA,IAAA,iBAAoBS,IADlB,uBACjBN,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXO,EAAa,mCAAG,WAAMD,GAAN,yFACJT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aADI,uBACnBN,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbQ,EAAc,mCAAG,WAAMF,GAAN,yFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADK,uBACpBN,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qD","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled(Link)`\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item } from 'components/MoviesList/MovieList.styled';\n\nexport const MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(({ id, original_title }) => (\n        <li key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <p>{original_title}</p>\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { getTrendingFilms } from 'services/API';\n\nconst Home = () => {\n  const [filmsDay, setFilmsDay] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function trendingFilms() {\n      try {\n        setLoading(true);\n        const response = await getTrendingFilms();\n        const films = response.results.map(\n          ({ poster_path, id, original_title }) => ({\n            poster_path,\n            id,\n            original_title,\n          })\n        );\n        setFilmsDay(films);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    trendingFilms();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {loading && <Loader />}\n      <MoviesList films={filmsDay} />\n      {error && <div>Something went wrong... &#128576;</div>}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'b2a327199ab710c06f4180e085359e4a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data;\n};\n\nexport const findFilmByName = async value => {\n  const params = {\n    query: value,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n};\n\nexport const getFullInfo = async idFilm => {\n  const { data } = await axios.get(`/movie/${idFilm}`);\n  return data;\n};\n\nexport const getActorsInfo = async idFilm => {\n  const { data } = await axios.get(`movie/${idFilm}/credits`);\n  return data;\n};\n\nexport const getFilmReviews = async idFilm => {\n  const { data } = await axios.get(`/movie/${idFilm}/reviews`);\n  return data;\n};\n"],"names":["Item","styled","Link","MoviesList","films","location","useLocation","map","id","original_title","to","state","from","useState","filmsDay","setFilmsDay","loading","setLoading","error","setError","useEffect","getTrendingFilms","response","results","poster_path","trendingFilms","axios","api_key","language","data","findFilmByName","value","params","query","getFullInfo","idFilm","getActorsInfo","getFilmReviews"],"sourceRoot":""}